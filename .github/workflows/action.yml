name: Build and deploy to heroku
on: push

jobs:
  build:
    name: Build JAR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Make Gradle executable
        working-directory: Cinema-app-backend
        run: chmod +x ./gradlew
      - name: Build with Gradle
        working-directory: Cinema-app-backend
        run: pwd && ls -l && ./gradlew build -x test
      - name: Saving JAR
        uses: actions/upload-artifact@v3
        with:
          name: GradleJAR
          path: Cinema-app-backend/build/libs/Cinema-app-0.0.1-SNAPSHOT.jar
  deploy:
    name: Deploy to heroku
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Loading JAR
        uses: actions/download-artifact@v3
        with:
          name: GradleJAR
          path: Cinema-app-backend/build/libs
      - name: Build and push Docker to Heroku
        working-directory: Cinema-app-backend
        env:
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
          HEROKU_USER: ${{ secrets.HEROKU_USER }}
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          DATABASE_URL_D: ${{ secrets.DATABASE_URL }}
          DATABASE_USERNAME_D: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD_D: ${{ secrets.DATABASE_PASSWORD }}
        run: | 
          docker login --username=$HEROKU_USER --password=$HEROKU_API_KEY registry.heroku.com
          docker build --build-arg DATABASE_URL=$DATABASE_URL_D --build-arg DATABASE_USERNAME=$DATABASE_USERNAME_D --build-arg DATABASE_PASSWORD=$DATABASE_PASSWORD_D --tag registry.heroku.com/$HEROKU_APP_NAME/web .
          docker push registry.heroku.com/$HEROKU_APP_NAME/web
          chmod +x ./release-docker-in-heroku.sh
          ./release-docker-in-heroku.sh $HEROKU_APP_NAME $HEROKU_API_KEY
